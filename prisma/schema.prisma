// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//modelos para el entorno
model User {
  id           Int     @id @default(autoincrement())
  username     String  @unique
  password     String
  email        String  @unique
  roleId       Int
  //statusActive = QUE LA CUENTA ESTA ELIMINADA O SE MANTIENE EN LA BASE DE DATOS
  statusActive Boolean
  Role         Role    @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Role {
  id   Int    @id @default(autoincrement())
  type String @unique
  User User[]
  Menu Menu[]

  @@map("roles")
}

model Menu {
  id_menu    Int          @id @default(autoincrement())
  name       String
  id_role    Int
  Role       Role         @relation(fields: [id_role], references: [id])
  Permission Permission[]

  @@map("menus")
}

model Permission {
  id_permissions Int    @id @default(autoincrement())
  function       String
  id_menu        Int
  Menu           Menu   @relation(fields: [id_menu], references: [id_menu])

  @@map("permissions")
}

//////////////////
model Server {
  id           Int      @id @default(autoincrement())
  name         String
  string_url   String
  user         String
  password     String
  type_bd      String
  port         Int
  Querie       Query[]
  statusActive Boolean  @default(true)

  @@map("servers")
}

model Query {
  id_querie    Int        @id @default(autoincrement())
  sentence     String
  id_server    Int
  Server       Server     @relation(fields: [id_server], references: [id])
  statusActive Boolean    @default(true)
  Template     Template[]

  @@map("queries")
}

model Template {
  id_template     Int               @id @default(autoincrement())
  name            String
  id_querie       Int
  statusActive    Boolean           @default(true)
  Querie          Query            @relation(fields: [id_querie], references: [id_querie])
  Template_Detail Template_Detail[]

  @@map("templates")
}

model Template_Detail {
  id          Int      @id @default(autoincrement())
  field       String
  type_field  String
  id_template Int
  Template    Template @relation(fields: [id_template], references: [id_template])

  @@map("template_details")
}
