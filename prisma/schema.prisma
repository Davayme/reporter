// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//modelos para el entorno
model User {
  id_user   Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String   @unique
  //statusActive = QUE LA CUENTA ESTA ELIMINADA O SE MANTIENE EN LA BASE DE DATOS
  statusActive    Boolean @default(true)
  usuarios_roles  UserRoles[]
  @@map("users")
}

model Role {
  id_rol         Int          @id @default(autoincrement())
  rol            String
  usuarios_roles UserRoles[]
  menus_roles    MenusRoles[]
  @@map("roles")
}

model Menu {
  id_menu      Int           @id @default(autoincrement())
  nombre       String
  id_padre     Int?
  parent       Menu?         @relation("MenuToSubmenus", fields: [id_padre], references: [id_menu])
  submenus     Menu[]        @relation("MenuToSubmenus")
  menus_roles  MenusRoles[]
  permisos_menus PermisosMenus[]
  @@map("menus")
}
  
model Permissions {
  id_permiso   Int           @id @default(autoincrement())
  permiso      String
  permisos_menus PermisosMenus[]
  @@map("permissions")
}

model UserRoles {
  id           Int           @id @default(autoincrement())
  id_user      Int
  id_rol       Int
  user         User           @relation(fields: [id_user], references: [id_user])
  rol          Role           @relation(fields: [id_rol], references: [id_rol])
  @@map("usuarios_roles")
}

model MenusRoles {
  id           Int           @id @default(autoincrement())
  id_rol       Int
  id_menu      Int
  rol          Role           @relation(fields: [id_rol], references: [id_rol])
  menu         Menu          @relation(fields: [id_menu], references: [id_menu])
  @@map("menus_roles")
}

model PermisosMenus {
  id           Int           @id @default(autoincrement())
  id_menu      Int
  id_permiso   Int
  menu         Menu          @relation(fields: [id_menu], references: [id_menu])
  permiso      Permissions       @relation(fields: [id_permiso], references: [id_permiso])
  @@map("permisos_menus")
}

//////////////////
model Server {
  id           Int      @id @default(autoincrement())
  name         String
  string_url   String
  user         String
  password     String
  database     String   // Nombre de la base de datos
  type_bd      DbType   // Enum para el tipo de base de datos
  port         Int
  ssl          Boolean  @default(false) // Campo para SSL
  statusActive Boolean  @default(true)
  description  String?  // Campo opcional de descripción
  Querie       Query[]

  @@map("servers")
}

enum DbType {
  mysql
  pg
  oracle
  sqlserver
}


model Query {
  id_querie    Int        @id @default(autoincrement())
  sentence     String
  id_server    Int
  Server       Server     @relation(fields: [id_server], references: [id])
  statusActive Boolean    @default(true)
  Template     Template[]

  @@map("queries")
}

model Template {
  id_template            Int               @id @default(autoincrement())
  name          String
  queryId       Int
  statusActive  Boolean           @default(true)
  query         Query             @relation(fields: [queryId], references: [id_querie])
  templateDetails Template_Detail[]

  @@map("templates")
}

model Template_Detail {
  id_detail              Int               @id @default(autoincrement())
  field                  String
  typeField              FieldType
  templateId             Int
  statusActive           Boolean           @default(true)
  template               Template          @relation(fields: [templateId], references: [id_template])
  operation              OperationType?    // Tipo de operación (e.g., sum, avg)

  @@map("template_details")
}

enum FieldType {
  text
  number
  date
  boolean
  time
}

enum OperationType {
  sum
  avg
  none
}